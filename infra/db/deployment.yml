apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: ipmac-app
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:14
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        - name: POSTGRES_DB
          value: "postgres"
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: ipmac-app
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  type: LoadBalancer

---
# Secrets (these would be created properly in production)
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: ipmac-app
type: Opaque
data:
  username: cG9zdGdyZXN1c2Vy # base64 encoded 'postgresuser'
  password: cG9zdGdyZXNwYXNzd29yZA== # base64 encoded 'postgrespassword'
